{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleReverse","setState","handleLengthSort","LENGTH","handleAlphabetSort","ALPHABET","handleReset","this","visibleGoods","goods","sort","productA","productB","localeCompare","length","reverse","getReorderedGoods","className","type","onClick","classNames","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,cAAgB,WACd,EAAKC,UAAS,SAACL,GAAD,MAAmB,CAC/BC,YAAaD,EAAMC,gBARzB,EAYEK,iBAAmB,WACjB,EAAKD,SAAS,CACZH,SAAUL,EAASU,UAdzB,EAkBEC,mBAAqB,WACnB,EAAKH,SAAS,CACZH,SAAUL,EAASY,YApBzB,EAwBEC,YAAc,WACZ,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QA3BzB,4CA+BE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EAhEH,SACLC,EADK,GAGJ,IADCZ,EACF,EADEA,WAAYC,EACd,EADcA,SAERU,EAAY,YAAOC,GAmBzB,OAjBAD,EAAaE,MAAK,SAACC,EAAUC,GAC3B,OAAQd,GACN,KAAKL,EAASY,SACZ,OAAOM,EAASE,cAAcD,GAEhC,KAAKnB,EAASU,OACZ,OAAOQ,EAASG,OAASF,EAASE,OAEpC,QACE,OAAO,MAITjB,GACFW,EAAaO,UAGRP,EA0CDQ,CAAkBtB,EAAiB,CAAEG,aAAYC,aAErD,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAASZ,KAAKH,mBACda,UAAWG,IACT,SACA,UACA,CAAE,WAAYtB,IAAaL,EAASY,WANxC,iCAYA,wBACEa,KAAK,SACLC,QAASZ,KAAKL,iBACde,UAAWG,IACT,SACA,aACA,CAAE,WAAYtB,IAAaL,EAASU,SANxC,4BAYA,wBACEe,KAAK,SACLC,QAASZ,KAAKP,cACdiB,UAAWG,IACT,SACA,aACA,CAAE,YAAavB,IANnB,sBAYEC,IAAaL,EAASM,MAAQF,IAE5B,wBACEqB,KAAK,SACLC,QAASZ,KAAKD,YACdW,UAAU,4BAHZ,sBAWN,6BACE,6BACGT,EAAaa,KAAI,SAACC,GAAD,OAChB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,iBA5FrB,GAAyBC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.84f72011.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { isReversed, sortType }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((productA, productB) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return productA.localeCompare(productB);\n\n      case SortType.LENGTH:\n        return productA.length - productB.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleReverse = () => {\n    this.setState((state: State) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleLengthSort = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  handleAlphabetSort = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const visibleGoods\n      = getReorderedGoods(goodsFromServer, { isReversed, sortType });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={this.handleAlphabetSort}\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.handleLengthSort}\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.handleReverse}\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': !isReversed },\n            )}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed)\n            && (\n              <button\n                type=\"button\"\n                onClick={this.handleReset}\n                className=\"button is-danger is-light\"\n              >\n                Reset\n              </button>\n            )}\n\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map((good) => (\n              <li\n                key={good}\n                data-cy=\"Good\"\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}