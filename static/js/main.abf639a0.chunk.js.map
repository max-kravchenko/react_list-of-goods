{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","isReversed","sortType","visibleGoods","sort","productA","productB","ALPHABET","localeCompare","LENGTH","length","reverse","App","state","NONE","setState","sortByLength","sortByAlphabet","reset","this","className","type","onClick","classNames","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,WAAYC,EACd,EADcA,SAERC,EAAY,YAAOH,GAmBzB,OAjBAG,EAAaC,MAAK,SAACC,EAAUC,GAC3B,OAAQJ,GACN,KAAKL,EAASU,SACZ,OAAOF,EAASG,cAAcF,GAEhC,KAAKT,EAASY,OACZ,OAAOJ,EAASK,OAASJ,EAASI,OAEpC,QACE,OAAO,MAITT,GACFE,EAAaQ,UAGRR,G,SAlCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAMe,EAAb,4MACEC,MAAe,CACbZ,YAAY,EACZC,SAAUL,EAASiB,MAHvB,EAMEH,QAAU,WACR,EAAKI,UAAS,SAACF,GAAD,MAAmB,CAC/BZ,YAAaY,EAAMZ,gBARzB,EAYEe,aAAe,WACb,EAAKD,SAAS,CACZb,SAAUL,EAASY,UAdzB,EAkBEQ,eAAiB,WACf,EAAKF,SAAS,CACZb,SAAUL,EAASU,YApBzB,EAwBEW,MAAQ,WACN,EAAKH,SAAS,CACZd,YAAY,EACZC,SAAUL,EAASiB,QA3BzB,4CA+BE,WACE,MAAiCK,KAAKN,MAA9BZ,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEpB,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAASH,KAAKF,eACdG,UAAWG,IACT,iBACA,CACE,0BACArB,IAAaL,EAASU,WAP5B,iCAcA,wBACEc,KAAK,SACLC,QAASH,KAAKH,aACdI,UAAWG,IACT,oBACA,CACE,6BACArB,IAAaL,EAASY,SAP5B,4BAcA,wBACEY,KAAK,SACLC,QAASH,KAAKR,QACdS,UAAWG,IACT,oBACA,CAAE,8BAA+BtB,IALrC,sBAWEC,IAAaL,EAASiB,MAAQb,IAE5B,wBACEoB,KAAK,SACLC,QAASH,KAAKD,MACdE,UAAU,4BAHZ,sBAWN,6BACE,6BACGrB,EAAkBD,EAAiB,CAAEG,aAAYC,aAC/CsB,KAAI,SAACC,GAAD,OACH,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,iBA9FvB,GAAyBC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.abf639a0.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { isReversed, sortType }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((productA, productB) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return productA.localeCompare(productB);\n\n      case SortType.LENGTH:\n        return productA.length - productB.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState((state: State) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  sortByAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={this.sortByAlphabet}\n            className={classNames(\n              'button is-info',\n              {\n                'button is-info is-light':\n                sortType !== SortType.ALPHABET,\n              },\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.sortByLength}\n            className={classNames(\n              'button is-success',\n              {\n                'button is-success is-light':\n                sortType !== SortType.LENGTH,\n              },\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.reverse}\n            className={classNames(\n              'button is-warning',\n              { 'button is-warning is-light': !isReversed },\n            )}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed)\n            && (\n              <button\n                type=\"button\"\n                onClick={this.reset}\n                className=\"button is-danger is-light\"\n              >\n                Reset\n              </button>\n            )}\n\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, { isReversed, sortType })\n              .map((good) => (\n                <li\n                  key={good}\n                  data-cy=\"Good\"\n                >\n                  {good}\n                </li>\n              ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}